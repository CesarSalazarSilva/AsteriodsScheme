#!r6rs
(import (rnrs lists (6))
        (rnrs base (6))
        (rnrs io simple (6)))

(define null '())

;Estas constantes
(define a 2); multiplicador
(define c 0); aumento
(define m 9); modulo
(define radionave 1)
(define radiodisparo 1)
(define radioasteroideinicial 8)
(define Velocidad_disparo 2)
(define ini_angulonave 45)
(define ini_velocidad 1)
(define pi 3.1415926535897932384626433832795028841)
(define Disp  (list (list(list 100 100 5 4 5 2) 50 50 4 45 52.62660994408865 54.25451762267059 5 2)
                    (list(list 100 100 5 4 5 2) 50 50 4 45 52.62660994408865 54.25451762267059 5 2)
                    (list(list 100 100 5 4 5 2) 50 50 4 45 52.62660994408865 54.25451762267059 5 2)
                    (list(list 100 100 5 4 5 2) 50 50 4 45 52.62660994408865 54.25451762267059 5 2)) )

;Funcion 1 : 
;Dom       :
;Rec       :
(define myRandom
  (lambda
      (xn)
    (mod (+ (* a xn) c) m)
    )
  )

;Funcion 2 : Convierte un numero de grados a radianes.
;Dom       :
;Rec       :
(define (Grad_Rad numero)
  (/ (* pi numero) 180)
  )

;Funcion 3 : Convierte un numero de radianes a grados.
;Dom       :
;Rec       :
(define (Rad_Grad numero)
  (/ (* 180 numero) pi)
  )
;-------------------------------------------------------------------------------------------------- TDA NAVE
;-------------------------------------------------------------------------------------------------- REPRESENTACION NAVE
; (list  space px py velocidad seed estadoJuego angulo)

;-------------------------------------------------------------------------------------------------- CONSTRUCTORES NAVE

;Funcion 4 : Construye una nave.
;Dom       :
;Rec       :
(define (create_nave variables px py velocidad seed estadoJuego angulo)
  (if (and  (number? px) (number? py) (number? velocidad) (number? seed)  )
      (list  variables px py velocidad seed estadoJuego angulo)
      null
      )  
  )

;-------------------------------------------------------------------------------------------------- PERTENENCIA NAVE

;Funcion 5 : Verifica si el argumento entregado corresponde a una estructura Nave.
;Dom       :
;Rec       :
(define (nave? posibleNave)
  (if (list? posibleNave)
      (if (= 7 (length posibleNave))
          (if (and
               (list?   (car posibleNave))
               (number? (car (cdr posibleNave)))
               (number? (car (cdr (cdr posibleNave))))
               (number? (car (cdr (cdr (cdr posibleNave)))))
               (number? (car (cdr (cdr (cdr (cdr posibleNave))))))
               )
              #t
              #f
              )
          #f
          )
      #f
      )
  )

;-------------------------------------------------------------------------------------------------- SELECTORES NAVE -

;Funcion 6 : Selecciona el space completo entregado a la estructura nave.
;Dom       :
;Rec       :
(define (Selector_variables_nave nave)
  (if (nave? nave)
      (car  nave)
      null
      )
  )

;Funcion 7 : Selecciona componente x de la nave.
;Dom       :
;Rec       :
(define (Selector_px_nave nave)
  (if (nave? nave)
      (car (cdr nave))
      null
      )
  )

;Funcion 8 : Selecciona componente y de la nave.
;Dom       :
;Rec       :
(define (Selector_py_nave nave)
  (if (nave? nave)
      (car (cdr (cdr nave)))
      null
      )
  )

;Funcion 9 : Selecciona componente velocidad de la nave.
;Dom       :
;Rec       :
(define (Selector_velocidad_nave nave)
  (if (nave? nave)
      (car (cdr (cdr (cdr nave))))
      null
      )
  )

;Funcion 10: Selecciona componente seed de la nave.
;Dom       :
;Rec       :
(define (Selector_seed_nave nave)
  (if (nave? nave)
      (car (cdr (cdr (cdr (cdr nave)))))
      null
      )
  )

;Funcion 11: Selecciona componente estadojuego de la nave.
;Dom       :
;Rec       :
(define (Selector_estadojuego_nave nave)
  (if (nave? nave)
      (car (cdr (cdr (cdr (cdr (cdr nave))))))
      null
      )
  )

;Funcion 12: Selecciona componente angulo de la nave.
;Dom       :
;Rec       :
(define (Selector_angulo_nave nave)
  (if (nave? nave)
      (car (cdr (cdr (cdr (cdr (cdr(cdr nave)))))))
      null
      )
  )

;-------------------------------------------------------------------------------------------------- MODIFICADORES NAVE -

;Funcion 13: Toma una estructura nave, un nuevo space y retorna una nueva nave con nuevo space.
;Dom       :
;Rec       :
(define (nave->variables nave nuevasvariables)
  (if (and (nave? nave)
           )
      (create_nave nuevasvariables (Selector_px_nave nave) (Selector_py_nave nave) (Selector_velocidad_nave nave) (Selector_seed_nave nave) (Selector_estadojuego_nave nave) (Selector_angulo_nave nave))
      nave
      )
  )

;Funcion 14: Toma una estructura nave, un nuevo "x" y retorna una nueva nave con nuevo "x".
;Dom       :
;Rec       :
(define (nave->px nave nuevopx)
  (if (and (nave? nave)
           (< -1 nuevopx)
           )
      ;(create_nave  space px py velocidad seed estadoJuego angulo)
      (create_nave (Selector_variables_nave nave) nuevopx (Selector_py_nave nave) (Selector_velocidad_nave nave) (Selector_seed_nave nave) (Selector_estadojuego_nave nave) (Selector_angulo_nave nave))
      nave
      )
  )

;Funcion 15: Toma una estructura nave, un nuevo "y" y retorna una nueva nave con nuevo "y".
;Dom       :
;Rec       :
(define (nave->py nave nuevopy)
  (if (and (nave? nave)
           (< -1 nuevopy)
           )
      (create_nave (Selector_variables_nave nave) (Selector_px_nave nave) nuevopy (Selector_velocidad_nave nave) (Selector_seed_nave nave) (Selector_estadojuego_nave nave) (Selector_angulo_nave nave) )
      nave
      )
  )

;Funcion 16: Toma una estructura nave, una nueva "velocidad" y retorna una nueva nave con nuevo "velocidad".
;Dom       :
;Rec       :
(define (nave->velocidad nave nuevavelocidad)
  (if (and (nave? nave)
           (number? nuevavelocidad)
           )
      (create_nave (Selector_variables_nave nave) (Selector_px_nave nave) (Selector_py_nave nave) nuevavelocidad (Selector_seed_nave nave) (Selector_estadojuego_nave nave) (Selector_angulo_nave nave))
      nave
      )
  )

;Funcion 17: Toma una estructura nave, un nuevo "seed" y retorna una nueva nave con nuevo "seed".
;Dom       :
;Rec       :
(define (nave->seed nave nuevoseed)
  (if (and (nave? nave)
           )
      (create_nave (Selector_variables_nave nave) (Selector_px_nave nave) (Selector_py_nave nave) (Selector_velocidad_nave nave) nuevoseed (Selector_estadojuego_nave nave) (Selector_angulo_nave nave) )
      nave
      )
  )

;Funcion 18: Toma una estructura nave, un nuevo "estadojuego" y retorna una nueva nave con nuevo "estadojuego".
;Dom       :
;Rec       :
(define (nave->estadojuego nave nuevoestado)
  (if (and (nave? nave)
           )
      (create_nave (Selector_variables_nave nave) (Selector_px_nave nave) (Selector_py_nave nave) (Selector_velocidad_nave nave) (Selector_seed_nave nave) nuevoestado (Selector_angulo_nave nave) )
      nave
      )
  )

;Funcion 19: Toma una estructura nave, un nuevo "angulo" y retorna una nueva nave con nuevo "angulo".
;Dom       :
;Rec       :
(define (nave->angulo nave nuevoangulo)
  (if (and (nave? nave)
           )
      (create_nave (Selector_variables_nave nave) (Selector_px_nave nave) (Selector_py_nave nave) (Selector_velocidad_nave nave) (Selector_seed_nave nave) (Selector_estadojuego_nave nave) nuevoangulo )
      nave
      )
  )

;-------------------------------------------------------------------------------------------------- F.VARIAS NAVE

;Funcion 20: Movimiento de la nave.
;Dom       :
;Rec       :
(define (moveShip space angulo velocidad seed)
  (if (ComparacionNave (Selector_Asteroides space)
                       (nave->velocidad (nave->angulo (nave->py (nave->px (Selector_Nave space)
                                                                          (mod (+ (Selector_px_nave (Selector_Nave space))
                                                                                  (* velocidad
                                                                                     (cos (Grad_Rad ( + (Selector_angulo_nave (Selector_Nave space)) angulo )
                                                                                                    )
                                                                                          ) 
                                                                                     )                                                                                        
                                                                                  )
                                                                               (Selector_M space))
                                                                          )                      
                                                                (mod (+ (Selector_py_nave (Selector_Nave space))
                                                                        (* velocidad
                                                                           (sin (Grad_Rad ( + (Selector_angulo_nave (Selector_Nave space)) angulo )
                                                                                          )
                                                                                )
                                                                           )                                                                               
                                                                        )
                                                                     (Selector_N space)
                                                                     )
                                                                )
                                                      ( + (Selector_angulo_nave (Selector_Nave space)) angulo )               
                                                      )
                                        velocidad    
                                        )
                       radionave)
      (nave->estadojuego (Selector_Nave space) 0)
      (nave->velocidad (nave->angulo (nave->py (nave->px (Selector_Nave space)
                                                         (mod (+ (Selector_px_nave (Selector_Nave space))
                                                                 (* velocidad
                                                                    (cos (Grad_Rad ( + (Selector_angulo_nave (Selector_Nave space)) angulo)
                                                                                   )
                                                                         ) 
                                                                    )                                                                        
                                                                 )
                                                              (Selector_M space)
                                                              )
                                                         )                      
                                               (mod (+ (Selector_py_nave (Selector_Nave space))
                                                       (* velocidad
                                                          (sin (Grad_Rad ( + (Selector_angulo_nave (Selector_Nave space)) angulo) ) ) )                                                              
                                                       )
                                                    (Selector_N space)
                                                    )
                                               )
                                     ( + (Selector_angulo_nave (Selector_Nave space))
                                         angulo
                                         )               
                                     )
                       (+ (Selector_velocidad_nave (Selector_Nave space))
                          velocidad
                          )    
                       )      
      ) 
  )

;-------------------------------------------------------------------------------------------------------------FIN NAVE-------------
;-------------------------------------------------------------------------------------------------- TDA ASTEROIDES
;-------------------------------------------------------------------------------------------------- REPRESENTACION ASTEROIDE
;(init_asteroid  space px py angulo velocidad radio seed )
;-------------------------------------------------------------------------------------------------- CONSTRUCTOR ASTEROIDE
;Funcion 21: Construye un asteroide.
;Dom       :
;Rec       :
(define (create_Asteroide  variables px py angulo velocidad radio seed )
  (if (and (number? px) (number? py) (number?  angulo) (number?  velocidad) (number? seed) (number? radio) )
      (list variables px py angulo velocidad radio seed)
      null
      )
  )

;-------------------------------------------------------------------------------------------------- F. DE PERTENENCIA ASTEROIDE

;Funcion 22: Verifica si el argumento entregado corresponde a una estructura Asteroide.
;Dom       :
;Rec       :
(define (Asteroide? posibleAsteroide)
  (if (list? posibleAsteroide)
      (if (= 7 (length posibleAsteroide))
          (if (and
               (list?   (car posibleAsteroide))
               (number? (car (cdr posibleAsteroide)))
               (number? (car (cdr (cdr posibleAsteroide))))
               (number? (car (cdr (cdr (cdr posibleAsteroide)))))
               (number? (car (cdr (cdr (cdr (cdr posibleAsteroide))))))
               (number? (car (cdr (cdr (cdr (cdr (cdr posibleAsteroide)))))))
               (number? (car (cdr (cdr (cdr (cdr (cdr (cdr posibleAsteroide))))))))
               )
              #t
              #f
              )
          #f
          )
      #f
      )
  )

;-------------------------------------------------------------------------------------------------- SELECTORES ASTEROIDE -

;Funcion 23: Selecciona las variables entregadas a la estructura asteroide.
;Dom       :
;Rec       :
(define (Selector_variables_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car  Asteroide)
      #f
      )
  )

;Funcion  : Selecciona la variable N presente en el tda Asteroide.
;Dom       :
;Rec       :
(define (Selector_N_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (car (Asteroide)))
      #f
      )
  )

;Funcion  : Selecciona la variable M presente en el tda Asteroide.
;Dom       :
;Rec       :
  (define (Selector_M_Asteroide Asteroide)
    (if (Asteroide? Asteroide)
        (car (cdr (car Asteroide)))
        #f
        )
    )

;Funcion  : Selecciona la variable A presente en el tda Asteroide.
;Dom       :
;Rec       :
(define (Selector_A_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (car Asteroide))))
      #f
      )
  )

;Funcion  : Selecciona la variable P presente en el tda Asteroide.
;Dom       :
;Rec       :
(define (Selector_P_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (car Asteroide)))))
      #f
      )
  )

;Funcion  : Selecciona la variable L presente en el tda Asteroide.
;Dom       :
;Rec       :
(define (Selector_L_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (cdr (car Asteroide))))))
      #f
      )
  )

;Funcion  : Selecciona la variable seed presente en el tda Asteroide.
;Dom       :
;Rec       :
(define (Selector_seedvar_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (cdr (cdr(car Asteroide)))))))
      #f
      )
  )

;Funcion 24: Selecciona componente x del asteroide.
;Dom       :
;Rec       :
(define (Selector_px_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr Asteroide))
      #f
      )
  )

;Funcion 25: Selecciona componente y del Asteroide.
;Dom       :
;Rec       :
(define (Selector_py_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr Asteroide)))
      #f
      )
  )

;Funcion 26: Selecciona componente angulo del Asteroide.
;Dom       :
;Rec       :
(define (Selector_angulo_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr Asteroide))))
      #f
      )
  )

;Funcion 27: Selecciona componente velocidad del Asteroide.
;Dom       :
;Rec       :
(define (Selector_velocidad_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (cdr Asteroide)))))
      #f
      )
  )

;Funcion 28: Selecciona componente radio del Asteroide.
;Dom       :
;Rec       :
(define (Selector_radio_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (cdr (cdr Asteroide))))))
      #f
      )
  )

;Funcion 29: Selecciona componente Seed del Asteroide.
;Dom       :
;Rec       :
(define (Selector_seed_Asteroide Asteroide)
  (if (Asteroide? Asteroide)
      (car (cdr (cdr (cdr (cdr (cdr(cdr Asteroide)))))))
      #f
      )
  )

;-------------------------------------------------------------------------------------------------- MODIFICADORES ASTEROIDE -

;Funcion 30: Toma una estructura Asteroide, unas nuevasvariables y retorna una nuevo Asteroide con unas nuevasvariables.
;Dom       :
;Rec       :
(define (Asteroide->variables Asteroide nuevasvariables)
  (if (and (Asteroide? Asteroide)  )
      (create_Asteroide nuevasvariables (Selector_px_Asteroide Asteroide) (Selector_py_Asteroide Asteroide) (Selector_angulo_Asteroide Asteroide) (Selector_velocidad_Asteroide Asteroide) (Selector_radio_Asteroide Asteroide)  (Selector_seed_Asteroide Asteroide)  )
      Asteroide
      )
  )

;Funcion 31: Toma una estructura Asteroide, un nuevo "x" y retorna un nuevo Asteroide con nuevo "x".
;Dom       :
;Rec       :
(define (Asteroide->px Asteroide nuevopx)
  (if (and (Asteroide? Asteroide) )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) nuevopx (Selector_py_Asteroide Asteroide) (Selector_angulo_Asteroide Asteroide) (Selector_velocidad_Asteroide Asteroide) (Selector_radio_Asteroide Asteroide) (Selector_seed_Asteroide Asteroide) )
      Asteroide
      )
  )

;Funcion 32: Toma una estructura Asteroide, un nuevo "y" y retorna un nuevo Asteroide con nuevo "y".
;Dom       :
;Rec       :
(define (Asteroide->py Asteroide nuevopy)
  (if (and (Asteroide? Asteroide)  (< 0 nuevopy) )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) (Selector_px_Asteroide Asteroide) nuevopy (Selector_angulo_Asteroide Asteroide) (Selector_velocidad_Asteroide Asteroide) (Selector_radio_Asteroide Asteroide) (Selector_seed_Asteroide Asteroide) )
      Asteroide
      )
  )

;Funcion 33: Toma una estructura Asteroide, un nuevo "angulo" y retorna un nuevo Asteroide con nuevo "angulo".
;Dom       :
;Rec       :
(define (Asteroide->angulo Asteroide nuevoangulo)
  (if (and (Asteroide? Asteroide) )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) (Selector_px_Asteroide Asteroide) (Selector_py_Asteroide Asteroide) nuevoangulo (Selector_velocidad_Asteroide Asteroide) (Selector_radio_Asteroide Asteroide) (Selector_seed_Asteroide Asteroide) )
      Asteroide
      )
  )

;Funcion 34: Toma una estructura Asteroide, una nueva "velocidad" y retorna un nuevo Asteroide con nuevo "velocidad".
;Dom       :
;Rec       :
(define (Asteroide->velocidad Asteroide nuevavelocidad)
  (if (and (Asteroide? Asteroide) (number? nuevavelocidad)  )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) (Selector_px_Asteroide Asteroide) (Selector_py_Asteroide Asteroide) (Selector_angulo_Asteroide Asteroide) nuevavelocidad (Selector_radio_Asteroide Asteroide) (Selector_seed_Asteroide Asteroide) )
      Asteroide
      )
  )

;Funcion 35: Toma una estructura Asteroide, un nuevo "radio" y retorna un nuevo Asteroide con nuevo "radio".
;Dom       :
;Rec       :
(define (Asteroide->radio Asteroide nuevoradio)
  (if (and (Asteroide? Asteroide) )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) (Selector_px_Asteroide Asteroide) (Selector_py_Asteroide Asteroide) (Selector_angulo_Asteroide Asteroide) (Selector_velocidad_Asteroide Asteroide) nuevoradio (Selector_seed_Asteroide Asteroide) )
      Asteroide
      )
  )

;Funcion 36: Toma una estructura Asteroide, un nuevo "seed" y retorna un nuevo Asteroide con nuevo "seed".
;Dom       :
;Rec       :
(define (Asteroide->seed Asteroide nuevoseed)
  (if (and (Asteroide? Asteroide) )
      (create_Asteroide (Selector_variables_Asteroide Asteroide) (Selector_px_Asteroide Asteroide) (Selector_py_Asteroide Asteroide) (Selector_angulo_Asteroide Asteroide) (Selector_velocidad_Asteroide Asteroide) (Selector_radio_Asteroide Asteroide) nuevoseed )
      Asteroide
      )
  )

;-------------------------------------------------------------------------------------------------- F. VARIAS ASTEROIDES
;Funcion 37: Cambia de posicion un asteroide a un frame t+1
;Dom       :
;Rec       :
(define (moveAsteroid asteroide angulo velocidad)
  (Asteroide->velocidad (Asteroide->angulo (Asteroide->py (Asteroide->px asteroide
                                                                         (mod (+ (Selector_px_Asteroide asteroide)
                                                                                 (* velocidad
                                                                                    (cos (Grad_Rad angulo))))
                                                                              (Selector_M_Asteroide asteroide)
                                                                              )
                                                                         )                      
                                                          (mod (+ (Selector_py_Asteroide asteroide)
                                                                  (* velocidad
                                                                     (sin (Grad_Rad angulo ) ) ) )
                                                               (Selector_M_Asteroide asteroide)) )
                                           angulo )
                        velocidad  
                        )      
  )
 
;Funcion 38: Llamado abreviado de moveAsteroid
;Dom       : (lista)
;Rec       : ()
(define (moverAsteroides asteroide)
  (moveAsteroid asteroide (Selector_angulo_Asteroide asteroide) (Selector_velocidad_Asteroide asteroide))
  )

;Funcion 39: 
;Dom       :
;Rec       :
(define (create_RL_Asteroides N M A P L seed contador)
  (if (= 0 contador)
      null
      (cons (create_Asteroide  (list  N M A P L seed )
                               (mod (myRandom (myRandom seed)) M)
                               (mod (myRandom seed) N)
                               (myRandom seed)
                               (myRandom (myRandom (myRandom seed)))
                               radioasteroideinicial
                               seed )
            (create_RL_Asteroides N M A P L (myRandom seed) (- contador 1)))
   )
  )

;Funcion 40: 
;Dom       :
;Rec       :
(define (create_RC_Asteroides N M A P L seed contador Resultado)
  (if (= 0 contador)
      Resultado
      (create_RC_Asteroides N M A P L (myRandom seed) (- contador 1) (cons (create_Asteroide (list  N M A P L seed)
                                                                                  (mod (myRandom (myRandom seed)) M)
                                                                                  (mod (myRandom seed) N)
                                                                                  (myRandom seed)
                                                                                  (myRandom (myRandom (myRandom seed)))
                                                                                  radioasteroideinicial
                                                                                  seed)
                                                                Resultado ) )
      )
  )

;-----------------------------------------------------------------------------------------------------------FIN ASTEROIDE------

;-------------------------------------------------------------------------------------------------- TDA DISPARO

;-------------------------------------------------------------------------------------------------- REPRESENTACION DISPARO
;-------------------------------------------------------------------------------------------------- CONSTRUCTOR DISPARO

;Funcion  : Construye un disparo.
;Dom       :
;Rec       :
(define (create_disparo variables px py angulo velocidad pxf pyf largo seed)
  (if (and (number? px) (list? variables) (number? py) (number? pxf) (number? pyf) (number? velocidad) (number? largo) (integer? seed) )
      (list variables px py angulo velocidad pxf pyf largo seed)
      null
      )  
  )

;-------------------------------------------------------------------------------------------------- F.DE PERTENENCIA DISPARO
;Funcion  : 
;Dom       :
;Rec       :
(define (disparo? posibledisparo)
  (if (list? posibledisparo)
      (if (= 9 (length posibledisparo))
          (if (and
               (list?   (car  posibledisparo));variables
               (number? (car (cdr posibledisparo)));px
               (number? (car (cdr (cdr posibledisparo))));py
               (number? (car (cdr (cdr (cdr posibledisparo)))));angulo
               (number? (car (cdr (cdr (cdr (cdr posibledisparo))))));velocidad
               (number? (car (cdr (cdr (cdr (cdr (cdr posibledisparo)))))));pxf
               (number? (car (cdr (cdr (cdr (cdr (cdr (cdr posibledisparo))))))));pyf
               (number? (car (cdr (cdr (cdr (cdr (cdr (cdr (cdr posibledisparo)))))))));largo
               (number? (car (cdr (cdr (cdr (cdr (cdr (cdr (cdr (cdr posibledisparo))))))))));seed
               )
              #t
              #f
              )
          #f
          )
      #f
      )
  )

;-------------------------------------------------------------------------------------------------- SELECTORES DISPARO
;Funcion  : Selecciona las variables entregadas a la estructura disparo.
;Dom       :
;Rec       :
(define (Selector_variables_disparo disparo)
  (if (disparo? disparo)
      (car  disparo)
      #f
      )
  )

;Funcion  : Selecciona la variable N presente en el tda disparo.
;Dom       :
;Rec       :
(define (Selector_N_disparo disparo)
  (if (disparo? disparo)
      (car (car (disparo)))
      #f
      )
  )

;Funcion  : Selecciona la variable M presente en el tda disparo.
;Dom       :
;Rec       :
  (define (Selector_M_disparo disparo)
    (if (disparo? disparo)
        (car (cdr (car disparo)))
        #f
        )
    )

;Funcion  : Selecciona la variable A presente en el tda disparo.
;Dom       :
;Rec       :
(define (Selector_A_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (car disparo))))
      #f
      )
  )

;Funcion  : Selecciona la variable P presente en el tda disparo.
;Dom       :
;Rec       :
(define (Selector_P_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (car disparo)))))
      #f
      )
  )

;Funcion  : Selecciona la variable L presente en el tda disparo.
;Dom       :
;Rec       :
(define (Selector_L_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (car disparo))))))
      #f
      )
  )

;Funcion  : Selecciona la variable seed presente en el tda disparo.
;Dom       :
;Rec       :
(define (Selector_seedvar_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (cdr(car disparo)))))))
      #f
      )
  )

;Funcion  : Selecciona componente x del disparo.
;Dom       :
;Rec       :
(define (Selector_px_disparo disparo)
  (if (disparo? disparo)
      (car (cdr disparo))
      #f
      )
  )

;Funcion  : Selecciona componente y del disparo.
;Dom       :
;Rec       :
(define (Selector_py_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr disparo)))
      #f
      )
  )

;Funcion  : Selecciona componente angulo del disparo.
;Dom       :
;Rec       :
(define (Selector_angulo_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr disparo))))
      #f
      )
  )

;Funcion  : Selecciona componente velocidad del disparo.
;Dom       :
;Rec       :
(define (Selector_velocidad_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr disparo)))))
      #f
      )
  )

;Funcion  : Selecciona componente 'posicion "x" final' del disparo.
;Dom       :
;Rec       :
(define (Selector_pxf_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (cdr disparo))))))
      #f
      )
  )

;Funcion  : Selecciona componente 'posicion "y" final' del disparo.
;Dom       :
;Rec       :
(define (Selector_pyf_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (cdr(cdr disparo)))))))
      #f
      )
  )

;Funcion  : Selecciona componente largo del disparo.
;Dom       :
;Rec       :
(define (Selector_largo_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (cdr (cdr (cdr disparo))))))))
      #f
      )
  )

;Funcion  : Selecciona componente seed del disparo.
;Dom       :
;Rec       :
(define (Selector_seed_disparo disparo)
  (if (disparo? disparo)
      (car (cdr (cdr (cdr (cdr (cdr (cdr (cdr (cdr disparo)))))))))
      #f
      )
  )

;-------------------------------------------------------------------------------------------------- MODIFICADORES DISPARO
;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->variables disparo nuevasvariables)
  (if (and (disparo? disparo) )
      (create_disparo nuevasvariables (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->px disparo nuevopx)
  (if (and (disparo? disparo))
      (create_disparo (Selector_variables_disparo disparo) nuevopx (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->py disparo nuevopy)
  (if (and (disparo? disparo) )
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) nuevopy (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->angulo disparo nuevoangulo)
  (if (and (disparo? disparo) )
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) nuevoangulo (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->velocidad disparo nuevovelocidad)
  (if (and (disparo? disparo) )
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) nuevovelocidad (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->pxf disparo nuevopxf)
  (if (and (disparo? disparo))
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) nuevopxf (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->pyf disparo nuevopyf)
  (if (and (disparo? disparo))
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) nuevopyf (Selector_largo_disparo disparo) (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->largo disparo nuevolargo)
  (if (and (disparo? disparo) )
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) nuevolargo (Selector_seed_disparo disparo) )
      disparo
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Disparo->seed disparo nuevoseed)
  (if (and (disparo? disparo)
           )
      (create_disparo (Selector_variables_disparo disparo) (Selector_px_disparo disparo) (Selector_py_disparo disparo) (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo) (Selector_pxf_disparo disparo) (Selector_pyf_disparo disparo) (Selector_largo_disparo disparo) nuevoseed )
      disparo
      )
  )

;-------------------------------------------------------------------------------------------------- F. VARIAS DISPARO
;Funcion  : 
;Dom       :
;Rec       :
(define (moverDisparo disparo angulo velocidad)
  (Disparo->velocidad (Disparo->angulo (Disparo->py (Disparo->px disparo
                                                                         (mod (+ (Selector_px_disparo disparo)
                                                                                 (* velocidad
                                                                                    (cos (Grad_Rad angulo))))
                                                                              (Selector_M_disparo disparo)
                                                                              )
                                                                         )                      
                                                          (mod (+ (Selector_py_disparo disparo)
                                                                  (* velocidad
                                                                     (sin (Grad_Rad angulo ) ) ) )
                                                               (Selector_M_disparo disparo)) )
                                           angulo )
                        velocidad  
                        )                                        
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (moverDisparos disparo)
  (moverDisparo disparo (Selector_angulo_disparo disparo) (Selector_velocidad_disparo disparo))
 )

;(space->Nave space (nave->estadojuego (Selector_Nave space) 0) )
;Funcion  : 
;Dom       :
;Rec       :
(define (Shoot space constante seed)
  (if (and (CheckSpace space) (number? constante))
      (if (ComparacionNave (Selector_Asteroides (space->Disparos (Update_Space space seed)
                                                                  (append (list (create_disparo (Selector_variables_nave (Selector_Nave space)) 
                                                                                                (Selector_px_nave (Selector_Nave space)) 
                                                                                                (Selector_py_nave (Selector_Nave space))
                                                                                                (+ constante (Selector_velocidad_nave (Selector_Nave space)))
                                                                                                (Selector_angulo_nave (Selector_Nave space)) 

                                                                                                (mod (+ (Selector_px_nave (Selector_Nave space)) 
                                                                                                        (* (Selector_L space) 
                                                                                                           (cos (Selector_angulo_nave (Selector_Nave space))))) (Selector_M space))

                                                                                                (mod (+ (Selector_py_nave (Selector_Nave space)) 
                                                                                                        (* (Selector_L space) 
                                                                                                           (sin (Selector_angulo_nave (Selector_Nave space))))) (Selector_N space))

                                                                                                (Selector_L space) 
                                                                                                seed) )

                                                                          (Selector_Disparos space)) )
                                                 )
                            (Selector_Nave (space->Disparos (Update_Space space seed)
                                                            (append (list (create_disparo (Selector_variables_nave (Selector_Nave space)) 
                                                                                          (Selector_px_nave (Selector_Nave space)) 
                                                                                          (Selector_py_nave (Selector_Nave space))
                                                                                          (+ constante (Selector_velocidad_nave (Selector_Nave space)))
                                                                                          (Selector_angulo_nave (Selector_Nave space)) 

                                                                                          (mod (+ (Selector_px_nave (Selector_Nave space)) 
                                                                                                  (* (Selector_L space) 
                                                                                                     (cos (Selector_angulo_nave (Selector_Nave space))))) (Selector_M space))

                                                                                          (mod (+ (Selector_py_nave (Selector_Nave space)) 
                                                                                                  (* (Selector_L space) 
                                                                                                     (sin (Selector_angulo_nave (Selector_Nave space))))) (Selector_N space))

                                                                                          (Selector_L space) 
                                                                                          seed) )

                                                                    (Selector_Disparos space)) )
                                           )
                            radionave)
          (space->Nave space (nave->estadojuego (Selector_Nave space) 0) )
          (space->Disparos (Update_Space space seed)
                           (append (list (create_disparo (Selector_variables_nave (Selector_Nave space)) 
                                                         (Selector_px_nave (Selector_Nave space)) 
                                                         (Selector_py_nave (Selector_Nave space))
                                                         (+ constante (Selector_velocidad_nave (Selector_Nave space)))
                                                         (Selector_angulo_nave (Selector_Nave space)) 

                                                         (mod (+ (Selector_px_nave (Selector_Nave space)) 
                                                                 (* (Selector_L space) 
                                                                    (cos (Selector_angulo_nave (Selector_Nave space))))) (Selector_M space))

                                                         (mod (+ (Selector_py_nave (Selector_Nave space)) 
                                                                 (* (Selector_L space) 
                                                                    (sin (Selector_angulo_nave (Selector_Nave space))))) (Selector_N space))

                                                         (Selector_L space) 
                                                         seed) )

                                   (Selector_Disparos space)) )
          )
      null
      )
  )

;-------------------------------------------------------------------------------------------------------------FIN DISPARO------
;-------------------------------------------------------------------------------------------------- TDA SPACE 
;-------------------------------------------------------------------------------------------------- REPRESENTACION SPACE 

;-------------------------------------------------------------------------------------------------- CONSTRUCTOR SPACE 

;Funcion  : Construye un space.
;Dom       :
;Rec       :
(define (create_Space N M A P L seed nave asteroides disparos)
  (if (and (integer? N) (< 0 N) (integer? M) (< 0 M) (integer? A) (< 0 A) (number? P) (< 0 P) (number? L) (< 0 L) (integer? seed)
           (nave? nave) (list? asteroides) (list? disparos) )
      
      (list (list N M A P L seed ) (list nave asteroides disparos) )
      null
      )
  )

;-------------------------------------------------------------------------------------------------- F.DE PERTENENCIA SPACE
;Funcion  : Funcion de pertenencia a Space.
;Dom       :
;Rec       :
(define (CheckSpace posiblespace)
  (if (list? posiblespace)
      (if (= 2 (length posiblespace))
          (if (and
               (list?   (car posiblespace))
               (number? (car (car posiblespace)))                                       ; N
               (< 0     (car (car posiblespace)))                                       ; N mayor a 0
               (number? (car (car posiblespace)))                                       ; M
               (< 0     (car (car posiblespace)))                                       ; M mayor que 0
               (number? (car (cdr (cdr (car posiblespace)))))                           ; A
               (< 0     (car (cdr (cdr (car posiblespace)))))                           ; Cantidad de asteroides mayor a 0
               (number? (car (cdr (cdr (cdr (car posiblespace))))))                     ; P
               (< 0     (car (cdr (cdr (cdr (car posiblespace))))))                     ; P mayor que 0
               (number? (car (cdr (cdr (cdr (cdr (car posiblespace)))))))               ; L
               (number? (car (cdr (cdr (cdr (cdr (cdr(car posiblespace))))))))          ; Seed         
               )
              #t
              #f
              )
          #f
          )
      #f
      )
 )

;-------------------------------------------------------------------------------------------------- SELECTORES SPACE 

;Funcion  : Selecciona las variables presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_Variables space)
  (if (CheckSpace space)
      (car space)
      null
      )
  )

;Funcion  : Selecciona la variable N presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_N space)
  (if (CheckSpace space)
      (car (car space))
      null
      )
  )

;Funcion  : Selecciona la variable M presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_M space)
  (if (CheckSpace space)
      (car (cdr (car space)))
      null
      )
  )

;Funcion  : Selecciona la variable A presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_A space)
  (if (CheckSpace space)
      (car (cdr (cdr (car space))))
      null
      )
  )

;Funcion  : Selecciona la variable P presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_P space)
  (if (CheckSpace space)
      (car (cdr (cdr (cdr (car space)))))
      null
      )
  )

;Funcion  : Selecciona la variable L presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_L space)
  (if (CheckSpace space)
      (car (cdr (cdr (cdr (cdr (car space))))))
      null
      )
  )

;Funcion  : Selecciona la variable L presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_seed space)
  (if (CheckSpace space)
      (car (cdr (cdr (cdr (cdr (cdr(car space)))))))
      null
      )
  )

;Funcion  : Selecciona la nave presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_Nave space)
  (if (CheckSpace space)
      (car (car (cdr space)))
      null
      )
  )

;Funcion  : Selecciona los asteroides presentes en el tda Space.
;Dom       :
;Rec       :
(define (Selector_Asteroides space)
  (if (CheckSpace space)
      (car (cdr (car (cdr space))))
      null
      )
  )

;Funcion  : Selecciona los Disparos presente en el tda Space.
;Dom       :
;Rec       :
(define (Selector_Disparos space)
  (if (CheckSpace space)
      (car (cdr (cdr (car (cdr space)))))
      null
      )        
  )

;-------------------------------------------------------------------------------------------------- MODIFICADORES SPACE 
;Funcion  : 
;Dom       :
;Rec       :
(define (space->N space nuevoN )
  (if (CheckSpace space)
      (create_Space nuevoN (Selector_M space) (Selector_A space) (Selector_P space) (Selector_L space) (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )               
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->M space nuevoM )
  (if (CheckSpace space)
      (create_Space (Selector_N space) nuevoM (Selector_A space) (Selector_P space) (Selector_L space) (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )               
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->A space nuevoA )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space)  nuevoA (Selector_P space) (Selector_L space) (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )                 
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->P space nuevoP )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) nuevoP (Selector_L space) (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )                
  )
;Funcion  : 
;Dom       :
;Rec       :
(define (space->L space nuevoL )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) (Selector_P space) nuevoL (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )           
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->seed space nuevaseed )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) (Selector_P space) (Selector_L space) nuevaseed (Selector_Nave space) (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )           
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->Nave space nuevaNave )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) (Selector_P space) (Selector_L space) (Selector_seed space) nuevaNave (Selector_Asteroides space) (Selector_Disparos space) )
      space
      )           
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->Asteroides space nuevosAsteroides )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) (Selector_P space) (Selector_L space) (Selector_seed space) (Selector_Nave space) nuevosAsteroides (Selector_Disparos space) )
      space
      )           
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (space->Disparos space nuevosDisparos )
  (if (CheckSpace space)
      (create_Space (Selector_N space) (Selector_M space) (Selector_A space) (Selector_P space) (Selector_L space) (Selector_seed space) (Selector_Nave space) (Selector_Asteroides space) nuevosDisparos )
      space
      )           
  )

;-------------------------------------------------------------------------------------------------- F. VARIAS SPACE
;Funcion  : Crea una lista de "N" ceros para representar una fila vacia.
;Dom       :
;Rec       :
(define (create_fila_vacia N)
  (if (= N 0)
      (list)
      (cons 0 (create_fila_vacia (- N 1)) )
      )
  )

;Funcion  : Crea una matriz tablero de MxN vacio.
;Dom       :
;Rec       :
(define (create_tablero_vacio M N)
  (if (or (string? M) (string? N) (list? M) (list? N) (< N 0) (< M 0) )
      (list)
      (if (= M 0 )
          (list)
          (cons (create_fila_vacia N) (create_tablero_vacio (- M 1) N))
          )
      )
  )

;Funcion  : Selecciona una fila de el tablero.
;Dom       :
;Rec       :
(define (Selector_fila space py auxiliar)
  (if (= auxiliar py)
      (car space)
      (Selector_fila (cdr space) py (+ auxiliar 1) )
      )
  )

;Funcion  : Llamado simplificado de Selector_fila.
;Dom       :
;Rec       :
(define (Seleccion_posicion space py)
  ( if (< 0 py)
       (Selector_fila space py 1)
       null
       )
  )

;Funcion que selecciona un elemento, de una columna especifica, de una fila en el tablero.
;Dom       :
;Rec       :
(define (Selector_x_y matriz px py)
  ( if (and (< 0 py) (< 0 px) )
       (Seleccion_posicion (Seleccion_posicion matriz py) px)
       null
       )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Comparacion lista elemento )
  (if (equal?  (cdr lista) null)
      #f
      (or (Comparacion (cdr lista) elemento)
          (Choque? (Selector_px_Asteroide elemento) (Selector_py_Asteroide elemento) (Selector_radio_Asteroide elemento) (Selector_px_Asteroide (car lista)) (Selector_py_Asteroide (car lista)) (Selector_radio_Asteroide (car lista)) )
          )
      )
  )

;Funcion  : Compara si se intersecta la nave con una lista de asteroides.
;Dom       :
;Rec       :
(define (ComparacionNave lista Nave radio)
  (if (= 0 (length lista))
      #f
      (or (ComparacionNave (cdr lista) Nave radio)
          (Choque? (Selector_px_nave Nave) (Selector_py_nave Nave)  radio (Selector_px_Asteroide (car lista)) (Selector_py_Asteroide (car lista)) (Selector_radio_Asteroide (car lista)) )
          )
      )
  )

;Funcion  : Verifica si el disparo choca con un asteroide
;Dom       :
;Rec       :
(define (eliminar_elemento_lista lista elem)  
  (cond [(equal? lista null) null]
        [(equal? #t (Choque? (Selector_px_Asteroide (car lista))
                             (Selector_py_Asteroide (car lista))
                             (Selector_radio_Asteroide (car lista))
                             (Selector_px_disparo elem)
                             (Selector_px_disparo elem)
                             radiodisparo)) (cdr lista)]
        [else (cons (car lista) (eliminar_elemento_lista (cdr lista) elem))]
        )  
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (identifica_elemento lista elem)
  (if (or (equal? lista null) (equal? elem null))
      null
      (if (equal? #t (Choque? (Selector_px_Asteroide (car lista)) (Selector_py_Asteroide (car lista)) (Selector_radio_Asteroide (car lista)) (Selector_px_disparo elem) (Selector_py_disparo elem) radiodisparo))
          (car lista)
          (cons (car lista) (identifica_elemento (cdr lista) elem))
          )
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (disparo_choca? lista elem)
  (if (equal? lista null)
      #f
      (if (equal? #t (Choque? (Selector_px_Asteroide (car lista)) (Selector_py_Asteroide (car lista)) (Selector_radio_Asteroide (car lista)) (Selector_px_disparo elem) (Selector_py_disparo elem) radiodisparo))
          #t
          (or #f (disparo_choca? (cdr lista) elem))
          )
      )
  )

;Funcion  : Crea tantos asteroides como pida la seed y todos con un radio equivalente a la mitad del anterior, de ser 2 el original se entrega una lista vacia.
;Dom       :
;Rec       :
(define (fisica_Asteroides asteroide valorRandom seed)
  (cond [(>= 2 (Selector_radio_Asteroide asteroide)) (list)
                                                     ]
        [(>= 1 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))  (Selector_py_Asteroide asteroide) )  (Selector_px_Asteroide asteroide))                                                                       
                                  )]
        
        [(= 2 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_N (Selector_variables_Asteroide asteroide))))                                                                       
                                 )]
        
        [(= 3 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 135)) (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 )]
        
        [(= 4 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 135)) (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 315)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 )]
        
        [(= 5 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 135)) (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 315)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 225)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 )]
        
        [(= 6 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 135)) (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 315)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 225)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 90))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (+ (Selector_px_Asteroide asteroide) 0))
                                 )]
        
        [(= 7 valorRandom) (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 0))   (Selector_py_Asteroide asteroide)  ) (Selector_px_Asteroide asteroide) )
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 45))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 135)) (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 315)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 225)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 90))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (+ (Selector_px_Asteroide asteroide) 0))
                                 (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (round (/(Selector_radio_Asteroide asteroide) 2))) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 270)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (+ (Selector_px_Asteroide asteroide) 0))
                                 )]
        
        [else             (list (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide
                                                                                                                         (/ (Selector_radio_Asteroide asteroide) 2))
                                                                                                       (+ (Selector_velocidad_Asteroide asteroide) seed))
                                                                                 (+ (Selector_angulo_Asteroide asteroide) 0))
                                                              (Selector_py_Asteroide asteroide)  )
                                               (Selector_px_Asteroide asteroide) )
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide
                                                                                                                         (/ (Selector_radio_Asteroide asteroide) 2))
                                                                                                       (+ (Selector_velocidad_Asteroide asteroide) seed))
                                                                                 (+ (Selector_angulo_Asteroide asteroide) 45))
                                                              (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide)))
                                               (mod (+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide
                                                                                                                         (/ (Selector_radio_Asteroide asteroide) 2))
                                                                                                       (+ (Selector_velocidad_Asteroide asteroide) seed))
                                                                                 (+ (Selector_angulo_Asteroide asteroide) 135))
                                                              (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide)))
                                               (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide
                                                                                                                         (/ (Selector_radio_Asteroide asteroide) 2))
                                                                                                       (+ (Selector_velocidad_Asteroide asteroide) seed))
                                                                                 (+ (Selector_angulo_Asteroide asteroide) 315))
                                                              (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide)))
                                               (mod(+ (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide
                                                                                                                         (/ (Selector_radio_Asteroide asteroide) 2)) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 225)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 1.5)) (Selector_N_Asteroide asteroide))) (mod(- (Selector_px_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2)) (Selector_M_Asteroide asteroide)))
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (/ (Selector_radio_Asteroide asteroide) 2)) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 90))  (mod (+ (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (+ (Selector_px_Asteroide asteroide) 0))
                                (Asteroide->px (Asteroide->py (Asteroide->angulo (Asteroide->velocidad (Asteroide->radio asteroide (/ (Selector_radio_Asteroide asteroide) 2)) (+ (Selector_velocidad_Asteroide asteroide) seed)) (+ (Selector_angulo_Asteroide asteroide) 270)) (mod (- (Selector_py_Asteroide asteroide) (* (/(Selector_radio_Asteroide asteroide) 2) 2.5)) (Selector_N_Asteroide asteroide))) (+ (Selector_px_Asteroide asteroide) 0))
                                )]
        )  
  )
;(space->Asteroides (space->Disparos space nuevosDisparos ) (append asteroides nuevosAsteroides) )
;Funcion  : 
;Dom       :
;Rec       :
(define (choqueDisparos_Asteroides space asteroides disparos nuevosAsteroides disparoNoChocado)
  (cond [(= 0 (length disparos)) (space->Asteroides (space->Disparos space
                                                                     disparoNoChocado )
                                                    (append asteroides nuevosAsteroides) ) ]
        
        [(equal? #t (disparo_choca? asteroides (car disparos))) (choqueDisparos_Asteroides space
                                                                                           (eliminar_elemento_lista asteroides (car disparos))
                                                                                           (cdr disparos)
                                                                                           (append (fisica_Asteroides (identifica_elemento asteroides (car disparos))
                                                                                                                      (mod (myRandom (Selector_seed space) )(Selector_P space))
                                                                                                                      (Selector_seed space))
                                                                                                   nuevosAsteroides)
                                                                                           disparoNoChocado) ]
        [(equal? #f (disparo_choca? asteroides (car disparos))) (choqueDisparos_Asteroides space
                                                                                           asteroides
                                                                                           (cdr disparos)
                                                                                           nuevosAsteroides
                                                                                           (cons (car disparos) disparoNoChocado)) ]
        )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Choque_Dis_Ast space)
  (if (= 0 (length (Selector_Disparos space)))
      space
      (choqueDisparos_Asteroides space (Selector_Disparos space) (Selector_Asteroides space) (list) (list))
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Asteroide_choca? lista elem)
  (if (equal? lista null)
      #f
      (if (equal? #t (Choque? (Selector_px_Asteroide (car lista)) (Selector_py_Asteroide (car lista)) (Selector_radio_Asteroide (car lista)) (Selector_px_Asteroide elem) (Selector_py_Asteroide elem) (Selector_radio_Asteroide elem)))
          #t
          (or #f (disparo_choca? (cdr lista) elem))
          )
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (eliminar_asteroide_lista lista elem)
  (cond [(equal? lista null) null]
        [(equal? #t (Choque? (Selector_px_Asteroide (car lista))
                             (Selector_py_Asteroide (car lista))
                             (Selector_radio_Asteroide (car lista))
                             (Selector_px_Asteroide elem)
                             (Selector_px_Asteroide elem)
                             (Selector_radio_Asteroide elem))) (cdr lista)]
        [else (cons (car lista) (eliminar_elemento_lista (cdr lista) elem))]
        )  
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (modificarTrayectoria lista elem)
  (if (Asteroide_choca? lista elem)
      (moveAsteroid elem (* -1 (Selector_angulo_Asteroide elem)) (myRandom (Selector_seed_Asteroide elem)))
      elem
      )    
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (AplicacionModTrayectoria lista resultado)
  (cond [(equal? lista null) (list)]
        [(equal? #t (Asteroide_choca? (eliminar_asteroide_lista lista (car lista)) (car lista)))  ( cons (modificarTrayectoria (eliminar_asteroide_lista lista (car lista)) (car lista)) (AplicacionModTrayectoria (cdr lista) resultado))]
        [else (cons (car lista) (AplicacionModTrayectoria (cdr lista) resultado))]
        )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Update_Space space seed)
  (if (ComparacionNave (Selector_Asteroides space) (Selector_Nave space) radionave)
      (space->Nave space (nave->estadojuego (Selector_Nave space) 0) )      
      (if (= 0 (length (Selector_Asteroides space)))
          (space->Nave space (nave->estadojuego (Selector_Nave space) 1) )
          ;ejecuto las colisiones asteroide y disparos
          (if (ComparacionNave (Selector_Asteroides (create_Space (Selector_N space)
                                                                  (Selector_M space)
                                                                  (Selector_A space)
                                                                  (Selector_P space)
                                                                  (Selector_L space)
                                                                  (myRandom seed)                                                    
                                                                  (moveShip space 0 1 seed)
                                                                  (Selector_Asteroides (Choque_Dis_Ast (space->Asteroides space
                                                                                                                          (map moverAsteroides (Selector_Asteroides space))) ))  ;mover                                                   
                                                                  (Selector_Disparos (Choque_Dis_Ast (space->Disparos space
                                                                                                                      (map moverDisparos (Selector_Disparos space))) ))    ;mover                                            
                                                                  )
                                                    )
                               (Selector_Nave (create_Space (Selector_N space)
                                                            (Selector_M space)
                                                            (Selector_A space)
                                                            (Selector_P space)
                                                            (Selector_L space)
                                                            (myRandom seed)                                                      
                                                            (moveShip space 0 1 seed)
                                                            (Selector_Asteroides (Choque_Dis_Ast (Choque_Dis_Ast (space->Asteroides space
                                                                                                                                    (map moverAsteroides (Selector_Asteroides space))) )))         ;mover                                            
                                                            (Selector_Disparos (Choque_Dis_Ast (space->Disparos space
                                                                                                                (map moverDisparos  (Selector_Disparos space)))))           ;mover                                        
                                                            )
                                              )
                               radionave)
              (space->Nave space (nave->estadojuego (Selector_Nave space) 0) )
              
              (create_Space (Selector_N space)
                            (Selector_M space)
                            (Selector_A space)
                            (Selector_P space)
                            (Selector_L space)
                            (myRandom seed)                                                                                 
                            (moveShip space 0 1 seed)
                            (Selector_Asteroides (Choque_Dis_Ast (Choque_Dis_Ast (space->Asteroides space
                                                                                                    (map moverAsteroides (Selector_Asteroides space))) )))                                                     
                            (Selector_Disparos (Choque_Dis_Ast (space->Disparos space
                                                                                (map moverDisparos  (Selector_Disparos space)))))                                                     
                            )              
              )
          )          
      )
  )

;Funcion  : 
;Dom       :
;Rec       :
(define (Demo_lazy space seed)
  (if (CheckSpace space)
      (if (or (= 0 (Selector_estadojuego_nave (Selector_Nave space)) ) (= 1 (Selector_estadojuego_nave (Selector_Nave space)) ) )      
          null
          (cons space (Demo_lazy (Shoot space Velocidad_disparo seed) seed)) 
          )
      null
      )
  )
  

;Funcion  : 
;Dom       :
;Rec       :
(define (Space->String space resultado)
   null
 )

;Funcion  : 
;Dom       :
;Rec       :
(define (Choque? objeto1x objeto1y radio1 objeto2x objeto2y radio2)
  (if (and (number? objeto1x)
           (< 0 objeto1x )
           (number? objeto1y)
           (< 0 objeto1y )
           (number? objeto2x)
           (< 0 objeto2x )
           (number? objeto2y)
           (< 0 objeto2y )
           (number? radio1)
           (< 0 radio1 )
           (number? radio2)
           (< 0 radio2 )
           )
      (if (<= (expt (+ (expt (- objeto1x objeto2x) 2) (expt (- objeto1y objeto2y) 2)) 0.5)
              (+ radio1 radio2)
              )
          #t
          #f
          )
      #f
      )
  )

;-------------------------------------------------------------------------------------------------------------FIN TDA SPACE------

;-------------------------------------------------------------------------------------------------- CREATESPACE RL

;Funcion  : 
;Dom       :
;Rec       :
(define (createSpaceRL N M A P L seed)
  (create_Space N
                M
                A
                P
                L
                seed 
                (create_nave  (list  N M A P L seed ) (round (/ M 2)) (round (/ N 2)) ini_velocidad seed 2 ini_angulonave)
                (create_RL_Asteroides N M A P L seed A);crear asteroides
                (list));disparos
  )
  

;-------------------------------------------------------------------------------------------------------------FIN SPACE RC------
;-------------------------------------------------------------------------------------------------- CREATESPACE RC

;Funcion  : 
;Dom       :
;Rec       :
(define (createSpaceRC N M A P L seed)
  (create_Space N
                M
                A
                P
                L
                seed 
                (create_nave  (list  N M A P L seed) (round (/ M 2)) (round (/ N 2)) ini_velocidad seed 2 ini_angulonave)
                (create_RC_Asteroides N M A P L seed A (list));crear asteroides
                (list))
  )

;-------------------------------------------------------------------------------------------------------------FIN SPACE RC------


;Zona Ejemplos Funciones:
(define space (createSpaceRL 50 50 5 4 5 2))
